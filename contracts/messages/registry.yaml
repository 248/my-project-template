# Message Registry - Language-Neutral SSOT
#
# 言語非依存メッセージレジストリ（Single Source of Truth）
# TypeScript, Go, その他の言語向けコード生成の基盤
#
# Version: 1.0.0
# Created: 2025-09-05
# Purpose: Multi-language code generation for message keys and API error codes

metadata:
  version: '1.0.0'
  created: '2025-09-05'
  description: 'Multi-language message registry for TypeScript and Go'
  supported_languages: ['typescript', 'go']
  supported_locales: ['ja', 'en', 'pseudo']

# =============================================================================
# MESSAGE KEYS REGISTRY
# =============================================================================

messages:
  # ========================================
  # Authentication namespace (auth.*)
  # ========================================
  auth:
    signin_required:
      key: 'auth.signin_required'
      namespace: 'auth'
      category: 'error'
      description: 'User authentication required'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: true

    signin_success:
      key: 'auth.signin_success'
      namespace: 'auth'
      category: 'success'
      description: 'User signed in successfully'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    user_ensured:
      key: 'auth.user_ensured'
      namespace: 'auth'
      category: 'success'
      description: 'User information synchronized'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: false

    ensure_failed:
      key: 'auth.ensure_failed'
      namespace: 'auth'
      category: 'error'
      description: 'Failed to synchronize user information'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: false

  # ========================================
  # Error namespace (error.*)
  # ========================================
  error:
    user_not_found:
      key: 'error.user_not_found'
      namespace: 'error'
      category: 'client_error'
      description: 'User record not found in database'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: true

    profile_retrieval_failed:
      key: 'error.profile_retrieval_failed'
      namespace: 'error'
      category: 'server_error'
      description: 'Failed to retrieve user profile'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: true

    profile_update_failed:
      key: 'error.profile_update_failed'
      namespace: 'error'
      category: 'server_error'
      description: 'Failed to update user profile'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: true

    validation_failed:
      key: 'error.validation_failed'
      namespace: 'error'
      category: 'client_error'
      description: 'Request validation failed'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: true

    invalid_response_format:
      key: 'error.invalid_response_format'
      namespace: 'error'
      category: 'server_error'
      description: 'Server returned invalid response format'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    unknown_error:
      key: 'error.unknown_error'
      namespace: 'error'
      category: 'server_error'
      description: 'An unexpected error occurred'
      template_params: ['details']
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: true

  # ========================================
  # Success namespace (success.*)
  # ========================================
  success:
    profile_retrieved:
      key: 'success.profile_retrieved'
      namespace: 'success'
      category: 'info'
      description: 'Profile information retrieved successfully'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: false

    profile_updated:
      key: 'success.profile_updated'
      namespace: 'success'
      category: 'info'
      description: 'Profile information updated successfully'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: true

    user_ensured:
      key: 'success.user_ensured'
      namespace: 'success'
      category: 'info'
      description: 'User information synchronized successfully'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: false

  # ========================================
  # UI Labels namespace (ui.*)
  # ========================================
  ui:
    profile_info:
      key: 'ui.profile_info'
      namespace: 'ui'
      category: 'label'
      description: 'Profile information section title'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    user_id:
      key: 'ui.user_id'
      namespace: 'ui'
      category: 'label'
      description: 'User ID field label'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    display_name:
      key: 'ui.display_name'
      namespace: 'ui'
      category: 'label'
      description: 'Display name field label'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    email_address:
      key: 'ui.email_address'
      namespace: 'ui'
      category: 'label'
      description: 'Email address field label'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    created_at:
      key: 'ui.created_at'
      namespace: 'ui'
      category: 'label'
      description: 'Created date field label'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    updated_at:
      key: 'ui.updated_at'
      namespace: 'ui'
      category: 'label'
      description: 'Updated date field label'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    auth_providers:
      key: 'ui.auth_providers'
      namespace: 'ui'
      category: 'label'
      description: 'Authentication providers field label'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    avatar:
      key: 'ui.avatar'
      namespace: 'ui'
      category: 'label'
      description: 'Avatar field label'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    not_set:
      key: 'ui.not_set'
      namespace: 'ui'
      category: 'status'
      description: 'Field value not set indicator'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    unknown:
      key: 'ui.unknown'
      namespace: 'ui'
      category: 'status'
      description: 'Unknown value indicator'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    dashboard:
      key: 'ui.dashboard'
      namespace: 'ui'
      category: 'label'
      description: 'Dashboard page title'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    authenticated_user_page:
      key: 'ui.authenticated_user_page'
      namespace: 'ui'
      category: 'info'
      description: 'Page description for authenticated users only'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    loading:
      key: 'ui.loading'
      namespace: 'ui'
      category: 'status'
      description: 'Loading state indicator'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    executing:
      key: 'ui.executing'
      namespace: 'ui'
      category: 'status'
      description: 'Executing state indicator'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    last_execution:
      key: 'ui.last_execution'
      namespace: 'ui'
      category: 'label'
      description: 'Last execution time label'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

  # ========================================
  # Action namespace (action.*)
  # ========================================
  action:
    auth_api_test:
      key: 'action.auth_api_test'
      namespace: 'action'
      category: 'button'
      description: 'Authenticated API test button label'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    health_check_success:
      key: 'action.health_check_success'
      namespace: 'action'
      category: 'status'
      description: 'Health check success message'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    response_data:
      key: 'action.response_data'
      namespace: 'action'
      category: 'label'
      description: 'Response data section label'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    error_occurred:
      key: 'action.error_occurred'
      namespace: 'action'
      category: 'error'
      description: 'Error occurred message'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

    error_details:
      key: 'action.error_details'
      namespace: 'action'
      category: 'label'
      description: 'Error details section label'
      template_params: []
      since: '1.0.0'
      deprecated: false
      api_usage: false
      ui_usage: true

  # ========================================
  # Validation namespace (validation.*)
  # ========================================
  validation:
    field_required:
      key: 'validation.field_required'
      namespace: 'validation'
      category: 'client_error'
      description: 'Required field validation error'
      template_params: ['field']
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: true

    invalid_email:
      key: 'validation.invalid_email'
      namespace: 'validation'
      category: 'client_error'
      description: 'Invalid email format validation error'
      template_params: ['email']
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: true

    invalid_url:
      key: 'validation.invalid_url'
      namespace: 'validation'
      category: 'client_error'
      description: 'Invalid URL format validation error'
      template_params: ['url']
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: true

    string_too_short:
      key: 'validation.string_too_short'
      namespace: 'validation'
      category: 'client_error'
      description: 'String too short validation error'
      template_params: ['field', 'minLength']
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: true

    string_too_long:
      key: 'validation.string_too_long'
      namespace: 'validation'
      category: 'client_error'
      description: 'String too long validation error'
      template_params: ['field', 'maxLength']
      since: '1.0.0'
      deprecated: false
      api_usage: true
      ui_usage: true

# =============================================================================
# NAMESPACES CONFIGURATION
# =============================================================================

namespaces:
  auth:
    description: 'Authentication and authorization related messages'
    primary_usage: 'api'

  error:
    description: 'Error messages for API responses and UI display'
    primary_usage: 'api'

  success:
    description: 'Success messages for API responses'
    primary_usage: 'api'

  ui:
    description: 'User interface labels and static text'
    primary_usage: 'ui'

  action:
    description: 'Action buttons and interactive element labels'
    primary_usage: 'ui'

  validation:
    description: 'Input validation error messages'
    primary_usage: 'both'

# =============================================================================
# CATEGORIES CONFIGURATION
# =============================================================================

categories:
  error:
    description: 'General error messages'
    severity: 'error'

  client_error:
    description: 'Client-side errors (4xx)'
    severity: 'error'

  server_error:
    description: 'Server-side errors (5xx)'
    severity: 'error'

  success:
    description: 'Success messages'
    severity: 'info'

  info:
    description: 'Informational messages'
    severity: 'info'

  label:
    description: 'UI field labels and section titles'
    severity: 'none'

  status:
    description: 'Status indicators and state messages'
    severity: 'none'

  button:
    description: 'Button labels and clickable actions'
    severity: 'none'

# =============================================================================
# VALIDATION RULES
# =============================================================================

validation_rules:
  key_format: "^[a-z]+\\.[a-z_]+$"
  namespace_format: '^[a-z]+$'
  max_template_params: 5
  required_fields: ['key', 'namespace', 'category', 'description', 'since']
  deprecated_requires_replacement: true
