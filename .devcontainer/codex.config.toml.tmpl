model = "gpt-5-codex"
model_reasoning_effort = "high"

[profiles.fast-auto]
sandbox_mode    = "workspace-write"
approval_policy = "on-request"

[profiles.no-prompts]
sandbox_mode    = "workspace-write"
approval_policy = "never"

[profiles.devcontainer]
sandbox_mode    = "danger-full-access"
approval_policy = "never"

[projects.'__WORKSPACE__']
trust_level = "trusted"

[mcp_servers.markitdown]
command = "/home/vscode/.local/bin/uvx"
args = ["markitdown-mcp"]
startup_timeout_ms = 60000

[mcp_servers."arxiv-mcp-server"]
command = "/home/vscode/.local/bin/uvx"
args = ["arxiv-mcp-server"]
startup_timeout_ms = 60000

[mcp_servers.context7]
command = "npx"
args = ["--yes","@upstash/context7-mcp"]
startup_timeout_ms = 60000

[mcp_servers.playwright]
command = "npx"
args = ["--yes","@playwright/mcp@latest"]
startup_timeout_ms = 180000

[mcp_servers.serena]
command = "/home/vscode/.local/bin/uvx"
args = ["--from","git+https://github.com/oraios/serena",
        "serena","start-mcp-server",
        "--context","codex","--transport","stdio"]
startup_timeout_ms = 180000

[mcp_servers."gemini-google-search"]
command = "npx"
args = ["--yes","mcp-gemini-google-search"]
startup_timeout_ms = 120000
env = { GEMINI_API_KEY = "${GEMINI_API_KEY}", GEMINI_MODEL = "${GEMINI_MODEL}" }

[mcp_servers.github]
command = "/home/vscode/.local/bin/mcp-proxy"
args = [
  "--transport", "streamablehttp",
  "-H", "Authorization", "Bearer ${GITHUB_TOKEN}",
  "https://api.githubcopilot.com/mcp/"
]
