openapi: 3.0.3
info:
  title: Project Template API
  version: 0.1.0
  description: A template API built with Hono and OpenAPI
  x-message-registry:
    version: 1.0.0
    total_keys: 38
    namespaces:
      - auth
      - error
      - success
      - ui
      - action
      - validation
    last_updated: '2025-09-05T13:02:15.279Z'
servers:
  - url: http://localhost:8000
    description: 開発環境
components:
  securitySchemes:
    ClerkJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Clerk JWT認証トークン
  schemas:
    HealthCheck:
      type: object
      properties:
        message:
          type: string
          example: Project Template API Server
        version:
          type: string
          example: 0.1.0
        status:
          type: string
          example: healthy
        timestamp:
          type: string
          format: date-time
      required:
        - message
        - version
        - status
        - timestamp
    DetailedHealthCheck:
      type: object
      properties:
        status:
          type: string
          enum:
            - healthy
            - degraded
            - unhealthy
          example: healthy
        timestamp:
          type: string
          format: date-time
        uptime:
          type: number
          description: サーバー稼働時間（秒）
          example: 3600
        services:
          type: object
          properties:
            api:
              $ref: '#/components/schemas/ServiceHealth'
            database:
              $ref: '#/components/schemas/ServiceHealth'
            redis:
              $ref: '#/components/schemas/ServiceHealth'
          required:
            - api
        system:
          type: object
          properties:
            memory:
              type: object
              properties:
                rss:
                  type: number
                  description: メモリ使用量（MB）
                heapTotal:
                  type: number
                  description: ヒープ合計（MB）
                heapUsed:
                  type: number
                  description: ヒープ使用量（MB）
              required:
                - rss
                - heapTotal
                - heapUsed
            cpu:
              type: object
              properties:
                user:
                  type: number
                  description: ユーザーCPU時間（ミリ秒）
                system:
                  type: number
                  description: システムCPU時間（ミリ秒）
              required:
                - user
                - system
          required:
            - memory
            - cpu
        version:
          type: string
          example: 0.1.0
        environment:
          type: string
          example: development
      required:
        - status
        - timestamp
        - uptime
        - services
        - system
        - version
        - environment
    ServiceHealth:
      type: object
      properties:
        status:
          type: string
          enum:
            - healthy
            - degraded
            - unhealthy
        message:
          type: string
        responseTime:
          type: number
          description: 応答時間（ミリ秒）
      required:
        - status
    User:
      type: object
      properties:
        id:
          type: string
          description: ClerkのユーザーID
          example: user_2abcd1234efgh5678ijkl
        displayName:
          type: string
          nullable: true
          description: 表示名
          example: 田中太郎
        email:
          type: string
          nullable: true
          format: email
          description: メールアドレス
          example: tanaka@example.com
        avatarUrl:
          type: string
          nullable: true
          format: uri
          description: アバターURL
          example: https://img.clerk.com/avatar.jpg
        locale:
          type: string
          nullable: true
          description: 言語設定
          example: ja
        createdAt:
          type: string
          format: date-time
          description: 作成日時
        updatedAt:
          type: string
          format: date-time
          description: 更新日時
      required:
        - id
        - createdAt
        - updatedAt
    UserUpdateData:
      type: object
      properties:
        displayName:
          type: string
          minLength: 1
          maxLength: 100
          description: 表示名
          example: 田中太郎
        email:
          type: string
          format: email
          description: メールアドレス
          example: tanaka@example.com
        avatarUrl:
          type: string
          format: uri
          description: アバターURL
          example: https://img.clerk.com/avatar.jpg
        locale:
          type: string
          enum:
            - ja
            - en
          description: 言語設定
          example: ja
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Response success indicator
        code:
          type: string
          enum:
            - auth.signin_required
            - auth.signin_success
            - auth.user_ensured
            - auth.ensure_failed
            - error.user_not_found
            - error.profile_retrieval_failed
            - error.profile_update_failed
            - error.validation_failed
            - error.invalid_response_format
            - error.unknown_error
            - success.profile_retrieved
            - success.profile_updated
            - success.user_ensured
            - ui.profile_info
            - ui.user_id
            - ui.display_name
            - ui.email_address
            - ui.created_at
            - ui.updated_at
            - ui.auth_providers
            - ui.avatar
            - ui.not_set
            - ui.unknown
            - ui.welcome_title
            - ui.welcome_stack_line
            - ui.badge_nextjs
            - ui.badge_tailwind
            - ui.badge_hono
            - ui.badge_clerk
            - ui.sign_in_prompt
            - ui.no_account_yet
            - ui.auth_provider_email
            - ui.language_label
            - ui.ui_labels_test_title
            - ui.error_messages_test_title
            - ui.action_messages_test_title
            - ui.current_locale
            - ui.locale_storage_note
            - ui.alt_user_avatar
            - ui.http_status
            - ui.details_dev
            - ui.dashboard
            - ui.authenticated_user_page
            - ui.loading
            - ui.executing
            - ui.last_execution
            - ui.project_template_title
            - ui.project_template_description
            - ui.badge_fullstack
            - ui.badge_typescript
            - ui.badge_authentication_included
            - ui.badge_production_ready
            - ui.tech_stack_title
            - ui.tech_nextjs_desc
            - ui.tech_typescript_desc
            - ui.tech_tailwind_desc
            - ui.tech_hono_desc
            - ui.tech_clerk_desc
            - ui.tech_prisma_desc
            - ui.quick_actions_title
            - ui.open_api_docs_desc
            - ui.open_github_desc
            - ui.view_docs_desc
            - ui.template_info_desc
            - ui.template_info_modal
            - ui.app_title
            - ui.authenticated_badge
            - ui.system_health_check_title
            - ui.last_checked
            - ui.system_status
            - ui.uptime
            - ui.service_status
            - ui.system_metrics
            - ui.memory_usage
            - ui.cpu_time
            - ui.version
            - ui.environment
            - ui.cpu_user_label
            - ui.cpu_system_label
            - ui.apitest_panel_title
            - ui.apitest_running_status
            - ui.apitest_success_status
            - ui.apitest_error_status
            - ui.apitest_response_details
            - ui.apitest_root_health_name
            - ui.apitest_root_health_description
            - ui.apitest_simple_health_name
            - ui.apitest_simple_health_description
            - ui.apitest_detailed_health_name
            - ui.apitest_detailed_health_description
            - ui.apitest_ensure_user_name
            - ui.apitest_ensure_user_description
            - ui.apitest_get_profile_name
            - ui.apitest_get_profile_description
            - ui.apitest_update_profile_name
            - ui.apitest_update_profile_description
            - ui.apitest_test_user_prefix
            - action.auth_api_test
            - action.health_check_success
            - action.response_data
            - action.error_occurred
            - action.error_details
            - action.sign_in
            - action.sign_up
            - action.open_api_docs
            - action.open_github
            - action.view_docs
            - action.template_info
            - action.apitest_run_all_tests
            - action.apitest_test_button
            - action.run_health_check
            - validation.field_required
            - validation.invalid_email
            - validation.invalid_url
            - validation.string_too_short
            - validation.string_too_long
          description: Message code from registry (language-neutral identifier)
        message:
          type: string
          description: Human-readable message (optional for backward compatibility)
          nullable: true
        data:
          type: object
          description: Response data
          nullable: true
      required:
        - success
        - code
    UserResponse:
      type: object
      properties:
        success:
          type: boolean
          description: 処理成功フラグ
          example: true
        code:
          type: string
          description: MessageKeyシステム用コード
          example: success.user_ensured
        message:
          type: string
          description: デバッグ用メッセージ（開発環境のみ）
          example: User ensured successfully
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
          required:
            - user
      required:
        - success
        - data
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          enum:
            - false
          example: false
          deprecated: true
        message:
          type: string
          description: Error message (deprecated - use code instead)
          example: User not found
          deprecated: true
        error:
          type: string
          description: Error details (deprecated - use code + details instead)
          example: User not found. Please sign in again.
          deprecated: true
        code:
          type: string
          enum: &ref_0
            - auth.signin_required
            - auth.signin_success
            - auth.user_ensured
            - auth.ensure_failed
            - error.user_not_found
            - error.profile_retrieval_failed
            - error.profile_update_failed
            - error.validation_failed
            - error.invalid_response_format
            - error.unknown_error
            - validation.field_required
            - validation.invalid_email
            - validation.invalid_url
            - validation.string_too_short
            - validation.string_too_long
          description: Error code (new standard)
          example: error.user_not_found
        details:
          type: object
          description: Additional error context
          nullable: true
      required:
        - success
        - code
      deprecated: true
      description: Deprecated error response format - use ApiError instead
    ApiError:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            success:
              type: boolean
              enum:
                - false
              example: false
            code:
              type: string
              enum: *ref_0
              description: Error code from registry
              example: error.user_not_found
            details:
              type: object
              description: Additional error context
              nullable: true
    ApiSuccess:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            success:
              type: boolean
              enum:
                - true
              example: true
            code:
              type: string
              enum:
                - success.profile_retrieved
                - success.profile_updated
                - success.user_ensured
              description: Success code from registry
              example: success.profile_retrieved
    ValidationErrorDetail:
      type: object
      properties:
        field:
          type: string
          description: Field name that failed validation
          example: email
        code:
          type: string
          enum:
            - validation.field_required
            - validation.invalid_email
            - validation.invalid_url
            - validation.string_too_short
            - validation.string_too_long
          description: Validation error code
          example: validation.field_required
        message:
          type: string
          description: Human-readable validation error message
          example: Email is required
      required:
        - field
        - code
        - message
    ValidationError:
      allOf:
        - $ref: '#/components/schemas/ApiError'
        - type: object
          properties:
            code:
              type: string
              enum:
                - error.validation_failed
              example: error.validation_failed
            errors:
              type: array
              items:
                $ref: '#/components/schemas/ValidationErrorDetail'
              description: Detailed validation errors
          required:
            - errors
    MessageCode:
      type: string
      enum:
        - auth.signin_required
        - auth.signin_success
        - auth.user_ensured
        - auth.ensure_failed
        - error.user_not_found
        - error.profile_retrieval_failed
        - error.profile_update_failed
        - error.validation_failed
        - error.invalid_response_format
        - error.unknown_error
        - success.profile_retrieved
        - success.profile_updated
        - success.user_ensured
        - ui.profile_info
        - ui.user_id
        - ui.display_name
        - ui.email_address
        - ui.created_at
        - ui.updated_at
        - ui.auth_providers
        - ui.avatar
        - ui.not_set
        - ui.unknown
        - ui.welcome_title
        - ui.welcome_stack_line
        - ui.badge_nextjs
        - ui.badge_tailwind
        - ui.badge_hono
        - ui.badge_clerk
        - ui.sign_in_prompt
        - ui.no_account_yet
        - ui.auth_provider_email
        - ui.language_label
        - ui.ui_labels_test_title
        - ui.error_messages_test_title
        - ui.action_messages_test_title
        - ui.current_locale
        - ui.locale_storage_note
        - ui.alt_user_avatar
        - ui.http_status
        - ui.details_dev
        - ui.dashboard
        - ui.authenticated_user_page
        - ui.loading
        - ui.executing
        - ui.last_execution
        - ui.project_template_title
        - ui.project_template_description
        - ui.badge_fullstack
        - ui.badge_typescript
        - ui.badge_authentication_included
        - ui.badge_production_ready
        - ui.tech_stack_title
        - ui.tech_nextjs_desc
        - ui.tech_typescript_desc
        - ui.tech_tailwind_desc
        - ui.tech_hono_desc
        - ui.tech_clerk_desc
        - ui.tech_prisma_desc
        - ui.quick_actions_title
        - ui.open_api_docs_desc
        - ui.open_github_desc
        - ui.view_docs_desc
        - ui.template_info_desc
        - ui.template_info_modal
        - ui.app_title
        - ui.authenticated_badge
        - ui.system_health_check_title
        - ui.last_checked
        - ui.system_status
        - ui.uptime
        - ui.service_status
        - ui.system_metrics
        - ui.memory_usage
        - ui.cpu_time
        - ui.version
        - ui.environment
        - ui.cpu_user_label
        - ui.cpu_system_label
        - ui.apitest_panel_title
        - ui.apitest_running_status
        - ui.apitest_success_status
        - ui.apitest_error_status
        - ui.apitest_response_details
        - ui.apitest_root_health_name
        - ui.apitest_root_health_description
        - ui.apitest_simple_health_name
        - ui.apitest_simple_health_description
        - ui.apitest_detailed_health_name
        - ui.apitest_detailed_health_description
        - ui.apitest_ensure_user_name
        - ui.apitest_ensure_user_description
        - ui.apitest_get_profile_name
        - ui.apitest_get_profile_description
        - ui.apitest_update_profile_name
        - ui.apitest_update_profile_description
        - ui.apitest_test_user_prefix
        - action.auth_api_test
        - action.health_check_success
        - action.response_data
        - action.error_occurred
        - action.error_details
        - action.sign_in
        - action.sign_up
        - action.open_api_docs
        - action.open_github
        - action.view_docs
        - action.template_info
        - action.apitest_run_all_tests
        - action.apitest_test_button
        - action.run_health_check
        - validation.field_required
        - validation.invalid_email
        - validation.invalid_url
        - validation.string_too_short
        - validation.string_too_long
      description: Message codes from registry (version 1.0.0)
      x-enum-descriptions:
        auth.signin_required: '[auth.error] User authentication required'
        auth.signin_success: '[auth.success] User signed in successfully'
        auth.user_ensured: '[auth.success] User information synchronized'
        auth.ensure_failed: '[auth.error] Failed to synchronize user information'
        error.user_not_found: '[error.client_error] User record not found in database'
        error.profile_retrieval_failed: '[error.server_error] Failed to retrieve user profile'
        error.profile_update_failed: '[error.server_error] Failed to update user profile'
        error.validation_failed: '[error.client_error] Request validation failed'
        error.invalid_response_format: '[error.server_error] Server returned invalid response format'
        error.unknown_error: '[error.server_error] An unexpected error occurred'
        success.profile_retrieved: '[success.info] Profile information retrieved successfully'
        success.profile_updated: '[success.info] Profile information updated successfully'
        success.user_ensured: '[success.info] User information synchronized successfully'
        ui.profile_info: '[ui.label] Profile information section title'
        ui.user_id: '[ui.label] User ID field label'
        ui.display_name: '[ui.label] Display name field label'
        ui.email_address: '[ui.label] Email address field label'
        ui.created_at: '[ui.label] Created date field label'
        ui.updated_at: '[ui.label] Updated date field label'
        ui.auth_providers: '[ui.label] Authentication providers field label'
        ui.avatar: '[ui.label] Avatar field label'
        ui.not_set: '[ui.status] Field value not set indicator'
        ui.unknown: '[ui.status] Unknown value indicator'
        ui.welcome_title: '[ui.label] Welcome title on landing page'
        ui.welcome_stack_line: '[ui.label] Tech stack line on landing page'
        ui.badge_nextjs: '[ui.label] Badge: Next.js'
        ui.badge_tailwind: '[ui.label] Badge: Tailwind CSS'
        ui.badge_hono: '[ui.label] Badge: Hono'
        ui.badge_clerk: '[ui.label] Badge: Clerk'
        ui.sign_in_prompt: '[ui.label] Prompt to sign in'
        ui.no_account_yet: '[ui.label] No account yet text'
        ui.auth_provider_email: '[ui.label] Auth provider: Email'
        ui.language_label: '[ui.label] Language selector label'
        ui.ui_labels_test_title: '[ui.label] UI labels test section title'
        ui.error_messages_test_title: '[ui.label] Error messages test section title'
        ui.action_messages_test_title: '[ui.label] Action messages test section title'
        ui.current_locale: '[ui.label] Current locale label'
        ui.locale_storage_note: '[ui.info] Note about locale storage'
        ui.alt_user_avatar: '[ui.label] Alt text for user avatar'
        ui.http_status: '[ui.label] HTTP status label'
        ui.details_dev: '[ui.label] Details (dev) label'
        ui.dashboard: '[ui.label] Dashboard page title'
        ui.authenticated_user_page: '[ui.info] Page description for authenticated users only'
        ui.loading: '[ui.status] Loading state indicator'
        ui.executing: '[ui.status] Executing state indicator'
        ui.last_execution: '[ui.label] Last execution time label'
        ui.project_template_title: '[ui.label] Project template title'
        ui.project_template_description: '[ui.label] Project template description paragraph'
        ui.badge_fullstack: '[ui.label] Badge: Fullstack'
        ui.badge_typescript: '[ui.label] Badge: TypeScript'
        ui.badge_authentication_included: '[ui.label] Badge: Authentication included'
        ui.badge_production_ready: '[ui.label] Badge: Production ready'
        ui.tech_stack_title: '[ui.label] Tech stack section title'
        ui.tech_nextjs_desc: '[ui.label] Description for Next.js'
        ui.tech_typescript_desc: '[ui.label] Description for TypeScript'
        ui.tech_tailwind_desc: '[ui.label] Description for Tailwind CSS'
        ui.tech_hono_desc: '[ui.label] Description for Hono'
        ui.tech_clerk_desc: '[ui.label] Description for Clerk'
        ui.tech_prisma_desc: '[ui.label] Description for Prisma'
        ui.quick_actions_title: '[ui.label] Quick actions section title'
        ui.open_api_docs_desc: '[ui.label] Open backend API docs description'
        ui.open_github_desc: '[ui.label] Open GitHub repository description'
        ui.view_docs_desc: '[ui.label] View documentation description'
        ui.template_info_desc: '[ui.label] Template info description'
        ui.template_info_modal: '[ui.label] Template info modal content'
        ui.app_title: '[ui.label] Application title'
        ui.authenticated_badge: '[ui.status] Authenticated badge label'
        ui.system_health_check_title: '[ui.label] System health check section title'
        ui.last_checked: '[ui.label] Last checked label'
        ui.system_status: '[ui.label] System status label'
        ui.uptime: '[ui.label] Uptime label'
        ui.service_status: '[ui.label] Service status section title'
        ui.system_metrics: '[ui.label] System metrics section title'
        ui.memory_usage: '[ui.label] Memory usage label'
        ui.cpu_time: '[ui.label] CPU time label'
        ui.version: '[ui.label] Version label'
        ui.environment: '[ui.label] Environment label'
        ui.cpu_user_label: '[ui.label] CPU time - user label'
        ui.cpu_system_label: '[ui.label] CPU time - system label'
        ui.apitest_panel_title: '[ui.label] API test panel title'
        ui.apitest_running_status: '[ui.status] Test running status'
        ui.apitest_success_status: '[ui.status] Test success status'
        ui.apitest_error_status: '[ui.status] Test error status'
        ui.apitest_response_details: '[ui.label] Response details section label'
        ui.apitest_root_health_name: '[ui.label] Root health check test name'
        ui.apitest_root_health_description: '[ui.label] Root health check test description'
        ui.apitest_simple_health_name: '[ui.label] Simple health check test name'
        ui.apitest_simple_health_description: '[ui.label] Simple health check test description'
        ui.apitest_detailed_health_name: '[ui.label] Detailed health check test name'
        ui.apitest_detailed_health_description: '[ui.label] Detailed health check test description'
        ui.apitest_ensure_user_name: '[ui.label] Ensure user test name'
        ui.apitest_ensure_user_description: '[ui.label] Ensure user test description'
        ui.apitest_get_profile_name: '[ui.label] Get profile test name'
        ui.apitest_get_profile_description: '[ui.label] Get profile test description'
        ui.apitest_update_profile_name: '[ui.label] Update profile test name'
        ui.apitest_update_profile_description: '[ui.label] Update profile test description'
        ui.apitest_test_user_prefix: '[ui.label] Test user display name prefix'
        action.auth_api_test: '[action.button] Authenticated API test button label'
        action.health_check_success: '[action.status] Health check success message'
        action.response_data: '[action.label] Response data section label'
        action.error_occurred: '[action.error] Error occurred message'
        action.error_details: '[action.label] Error details section label'
        action.sign_in: '[action.button] Sign in button label'
        action.sign_up: '[action.button] Sign up button label'
        action.open_api_docs: '[action.button] Open API docs action title'
        action.open_github: '[action.button] Open GitHub repository action title'
        action.view_docs: '[action.button] View documentation action title'
        action.template_info: '[action.button] Template info action title'
        action.apitest_run_all_tests: '[action.button] Run all tests button label'
        action.apitest_test_button: '[action.button] Individual test button label'
        action.run_health_check: '[action.button] Run health check button label'
        validation.field_required: '[validation.client_error] Required field validation error'
        validation.invalid_email: '[validation.client_error] Invalid email format validation error'
        validation.invalid_url: '[validation.client_error] Invalid URL format validation error'
        validation.string_too_short: '[validation.client_error] String too short validation error'
        validation.string_too_long: '[validation.client_error] String too long validation error'
paths:
  /:
    get:
      operationId: healthCheck
      summary: ヘルスチェック
      description: APIサーバーの状態確認
      responses:
        '200':
          description: サーバー正常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
  /api/health:
    get:
      operationId: getDetailedHealth
      summary: 詳細ヘルスチェック
      description: システム全体の詳細な健全性状態を取得
      tags:
        - System
      responses:
        '200':
          description: システム正常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedHealthCheck'
        '503':
          description: サービス利用不可
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedHealthCheck'
  /api/auth/users/ensure:
    post:
      operationId: ensureUser
      summary: ユーザー冪等作成/同期
      description: 初回サインイン/アップ時にユーザーを冪等に作成・同期する
      tags:
        - Authentication
      security:
        - ClerkJWT: []
      responses:
        '200':
          description: ユーザー作成/更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/users/me:
    get:
      operationId: getUserProfile
      summary: プロフィール取得
      description: 認証済みユーザーの自分のプロフィール情報を取得
      tags:
        - Users
      security:
        - ClerkJWT: []
      responses:
        '200':
          description: プロフィール取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ユーザーが見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: updateUserProfile
      summary: プロフィール更新
      description: 認証済みユーザーの自分のプロフィール情報を更新
      tags:
        - Users
      security:
        - ClerkJWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateData'
      responses:
        '200':
          description: プロフィール更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ユーザーが見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
