services:
  frontend:
    build:
      context: ../../
      dockerfile: ./infra/docker/Dockerfile.frontend
    ports:
      - '3000:3000'
    volumes:
      - ../../apps/frontend:/app/apps/frontend
      - ../../packages:/app/packages
      - ../../tools:/app/tools
      - ../../contracts:/app/contracts
      - /app/node_modules
      - /app/apps/frontend/node_modules
    env_file:
      - ../../.env
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - app-network
    command: ['pnpm', '--filter', '@template/frontend', 'dev']

  backend:
    build:
      context: ../../
      dockerfile: ./infra/docker/Dockerfile.backend
    ports:
      - '8080:8080'
    volumes:
      - ../../apps/backend:/app/apps/backend
      - ../../packages:/app/packages
      - ../../tools:/app/tools
      - ../../contracts:/app/contracts
      - /app/node_modules
      - /app/apps/backend/node_modules
    env_file:
      - ../../.env
    environment:
      - NODE_ENV=development
      - PORT=8080
      - DATABASE_URL=postgresql://template_user:template_pass@postgres:5432/template_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    command: ['pnpm', '--filter', '@template/backend', 'dev']

  postgres:
    image: postgres:16-alpine
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - ../../.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - '6379:6379'
    env_file:
      - ../../.env
    volumes:
      - redis_data:/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - '5050:80'
    env_file:
      - ../../.env
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge
